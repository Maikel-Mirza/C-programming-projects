*****************************************************************************
                              Reflection
                             Workshop - #8
Full Name  :    Maikel Mirzadegan   
Student ID#:    032299158
Email      :    mmirzadegan@senecacollege.ca
Section    :    NPP

Authenticity Declaration:
I declare this submission is the result of my own work and has not been
shared with any other student or 3rd party content provider. This submitted
piece of work is entirely of my own creation.
*****************************************************************************
1. Structure data types can demand a lot of memory (for example the "ReportData" structure). Without digging 
into advanced memory management (for example padding), how many bytes of memory would the 
"ReportData" structure minimally require? How could we improve the passing of this information to functions? 
Use the function "displayReportData" from this workshop in your explanation.

The ReportData structure would require 60 bytes of memory. In order to improve the passing of this information
to functions I would pass by address using pointers.


2. The CatFoodInfo structure and the ReportData structure contain common members. How could the 
"ReportData" structure be improved? Show the new and improved "ReportData" structure with your changes, 
then show how you would modify your code in the function "displayReportData". Specifically, show how you 
would need to modify the printf statement that displays the data.

The ReportData structure could be improved by removing the common members that are present in the CatFoodInfo
structure and instead calling the CatFoodInfo structure in the ReportData structure, struct CatFoodInfo info;

struct CatFoodInfo
{
  int sku;       // product sku
  double price;  // price of product
  int calories;  // calories per serving
  double weight; // product weight in pounds
};

struct ReportData
{
  struct CatFoodInfo info;
  double weightKilos;  // product weight in kilos
  int weightGrams;  // product weight in grams
  double totalServings; // the total num of servings
  double costPerServing; // cost of a serving
  double costOfOneCalory; // the cost of calories per serving
};
I removed the unnecessary variables in the ReportData struct and utilized the CatFoodInfo struct.
I would modify the printf statement that displays the data,
changing the required variables to the appropriate struct as follows: 

void displayReportData(const struct ReportData data, const double cheapest)
{
    printf("%07d %10.2lf %10.1lf %10.4lf %9d %8d %8.1lf %7.2lf %7.5lf", data.info.sku,
           data.info.price, data.info.weight, data.weightKilos, data.weightGrams, data.info.calories,
           data.totalServings, data.costPerServing, data.costOfOneCalory);
}